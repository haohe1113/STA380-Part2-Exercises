knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
set.seed(1)
library(tm)
library(tidyverse)
library(slam)
library(proxy)
library(caret)
#the readerplain function
readerPlain = function(fname){
#convert a txt file to a PlainTextDocument
readPlain(elem=list(content=readLines(fname)),
id=fname, language='en') }
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('/Users/hau/Desktop/STA380-master/exercises/sahana/Author Attribution/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 90) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_tr) = mynames
#create the train corpus
cps_tr_raw = Corpus(VectorSource(c50_tr))
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('../data/ReutersC50/C50train/*')
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('../data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 28) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('../data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 29) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('../data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 27) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
arti_list
name = substring(author, first = 27) #slice the folder link to obtain the name of the author
for (author in author_folder) {
name = substring(author, first = 27) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
arti_list
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('../data/ReutersC50/C50train/*')
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('../data/ReutersC50/C50train/*')
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('..data/ReutersC50/C50train/*')
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('../data/ReutersC50/C50train/*')
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/data/ReutersC50/C50train/*')
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('../data/ReutersC50/C50train/*')
# Power grid load every hour for 6 1/2 years
# throughout the 8 ERCOT regions of Texas
# units of grid load are megawatts.
# This represents peak instantaneous demand for power in that hour.
# source: scraped from the ERCOT website
load_data = read.csv("../data/ercot/load_data.csv")
setwd("~/Desktop/Group_Project/data")
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 27) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
rm(list=ls())
set.seed(1)
library(tm)
library(tidyverse)
library(slam)
library(proxy)
library(caret)
#the readerplain function
readerPlain = function(fname){
#convert a txt file to a PlainTextDocument
readPlain(elem=list(content=readLines(fname)),
id=fname, language='en') }
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 27) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_tr) = mynames
#create the train corpus
cps_tr_raw = Corpus(VectorSource(c50_tr))
articles
name
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 49) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_tr) = mynames
#create the train corpus
cps_tr_raw = Corpus(VectorSource(c50_tr))
name
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 52) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_tr) = mynames
#create the train corpus
cps_tr_raw = Corpus(VectorSource(c50_tr))
name
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 50) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_tr) = mynames
#create the train corpus
cps_tr_raw = Corpus(VectorSource(c50_tr))
name
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 60) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_tr) = mynames
#create the train corpus
cps_tr_raw = Corpus(VectorSource(c50_tr))
name
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 60) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_tr) = mynames
#create the train corpus
cps_tr_raw = Corpus(VectorSource(c50_tr))
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 59) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_tr) = mynames
#create the train corpus
cps_tr_raw = Corpus(VectorSource(c50_tr))
59
name
setwd()
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50train/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_tr = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 59) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_tr = append(author_list_tr, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_tr = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_tr
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_tr) = mynames
#create the train corpus
cps_tr_raw = Corpus(VectorSource(c50_tr))
#a list of links to authors' folders(folders each contain 50 articles for its author)
author_folder = Sys.glob('~/Desktop/Group_Project/data/ReutersC50/C50test/*')
#article file link list and author list
arti_list = c() #a list of all article docs (50 articles x 50 authors)
author_list_te = c() # a list of author names corresponding every doc in the corpus
for (author in author_folder) {
name = substring(author, first = 59) #slice the folder link to obtain the name of the author
articles = Sys.glob(paste0(author, '/*.txt')) #a list of all 50 articles from one author
arti_list = append(arti_list, articles)
author_list_te = append(author_list_te, rep(name, times = length(articles)))
}
#use the link list to create a list of readPlaindocs
c50_te = lapply(arti_list, readerPlain)
#clean the doc names and apply them to c50_te
mynames = arti_list %>%
{ strsplit(., '/', fixed=TRUE) } %>%
{ lapply(., tail, n=2) } %>%
{ lapply(., paste0, collapse = '') } %>%
unlist
names(c50_te) = mynames
#create the test corpus
cps_te_raw = Corpus(VectorSource(c50_te))
